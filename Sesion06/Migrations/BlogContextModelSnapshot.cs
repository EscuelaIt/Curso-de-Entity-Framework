// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DemoEF.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Blog");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlogId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TPTBlogId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("TPTBlogId");

                    b.ToTable("BlogPost");
                });

            modelBuilder.Entity("TPTBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TPTBlogs", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("OtherBlogType", b =>
                {
                    b.HasBaseType("Blog");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("RssUrl");

                    b.HasDiscriminator().HasValue("OtherBlogType");
                });

            modelBuilder.Entity("RssBlog", b =>
                {
                    b.HasBaseType("Blog");

                    b.Property<int>("RssCount")
                        .HasColumnType("integer");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("RssUrl");

                    b.HasDiscriminator().HasValue("RssBlog");
                });

            modelBuilder.Entity("TPTRssBlog", b =>
                {
                    b.HasBaseType("TPTBlog");

                    b.Property<int>("RssCount")
                        .HasColumnType("integer");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("TPTRssBlogs", (string)null);
                });

            modelBuilder.Entity("BlogPost", b =>
                {
                    b.HasOne("Blog", null)
                        .WithMany("Posts")
                        .HasForeignKey("BlogId");

                    b.HasOne("TPTBlog", null)
                        .WithMany("Posts")
                        .HasForeignKey("TPTBlogId");
                });

            modelBuilder.Entity("TPTRssBlog", b =>
                {
                    b.HasOne("TPTBlog", null)
                        .WithOne()
                        .HasForeignKey("TPTRssBlog", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Blog", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("TPTBlog", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
